name: Container build and run
on:
  push:
  workflow_dispatch:

env:
  IMAGE_NAME: openshift-actions-connector
  REGISTRY_HOSTNAME: quay.io
  REGISTRY_USER: tetchell

jobs:
  ci:
    name: CI
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - uses: redhat-actions/common/commit-data@v1
        id: commit_data

      - name: Install
        run: |
          yarn --frozen-lockfile add wait-on

      - name: Build container
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: latest ${{ steps.commit_data.outputs.branch }}
          dockerfiles:
            containerize/Containerfile
          layers: true
          oci: true
          build-args:
            VCS_REF=${{ steps.commit_data.outputs.short_sha }}

      - name: Run container
        run: |
          set -eEx
          nohup yarn container-run > out.log 2>&1 &
          echo "View output in Logs step below"
          sleep 10

          yarn wait-on -l tcp:3003 -t 60000

      - name: Podman inspect
        run: |
          podman inspect $(podman ps -q)

      - name: Test
        shell: bash
        run: |
          set -eEx
          podman ps
          curl -sSf http://localhost:3003

      - name: Push container image
        if: ${{ steps.commit_data.outputs.is_pr }} == 'false'
        uses: redhat-actions/push-to-registry@v2
        with:
          registry: ${{ env.REGISTRY_HOSTNAME }}/${{ env.REGISTRY_USER }}
          image:  ${{ env.IMAGE_NAME }}
          tags: latest ${{ steps.commit_data.outputs.branch }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Logs
        if: always()
        run: |
          echo "============ nohup output ============"
          cat out.log
          echo "========== end nohup output =========="
          echo "=========== Container logs ==========="
          podman logs $(podman ps -a -q)

      - name: Take down
        if: always()
        run: |
          podman stop $(podman ps -q)
